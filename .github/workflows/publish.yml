name: Publish Modules

on:
  push:
    branches: [ feature/apply-ci-cd ]

env:
  ## 워크플로우가 진행중일 때 생성되는 Default Token.
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-modules: ${{ steps.changes.outputs.changed-modules }}
      has-changes: ${{ steps.changes.outputs.has-changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed modules
        id: changes
        shell: bash
        run: |
          set -euo pipefail

        
          MODULES=$(grep -oP 'include\(":\K[^"]+' settings.gradle.kts | tr '\n' ' ')

        
          BASE_SHA="${{ github.event.before }}"
          HEAD_SHA="${{ github.sha }}"

        
          if [[ "$BASE_SHA" == "0000000000000000000000000000000000000000" ]]; then
          
            CHANGED_FILES=$(git ls-tree -r --name-only "$HEAD_SHA")
          else
            CHANGED_FILES=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA")
          fi

          echo "Changed files:"
          echo "$CHANGED_FILES"

        
          CHANGED_MODULES=()
          for module in $MODULES; do
            # settings 파싱 잔여 쉼표 제거(예방적)
            module=$(echo "$module" | sed 's/,$//')
            if echo "$CHANGED_FILES" | grep -qE "^${module}/"; then
              CHANGED_MODULES+=("\"$module\"")
            fi
          done

          if [ ${#CHANGED_MODULES[@]} -gt 0 ]; then
            CHANGED_JSON="[$(IFS=,; echo "${CHANGED_MODULES[*]}")]"
            HAS_CHANGES=true
          else
            CHANGED_JSON="[]"
            HAS_CHANGES=false
          fi

          echo "changed-modules=$CHANGED_JSON" >> "$GITHUB_OUTPUT"
          echo "has-changes=$HAS_CHANGES" >> "$GITHUB_OUTPUT"

          echo "Changed modules: $CHANGED_JSON"
          echo "Has changes: $HAS_CHANGES"
  
  

  publish:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.has-changes == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{ fromJSON(needs.detect-changes.outputs.changed-modules) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Publish ${{ matrix.module }} module
        run: ./gradlew :${{ matrix.module }}:publish
        env:
          GITHUB_PLUGIN_USER: ${{ secrets.GH_PLUGIN_USER }}
          GITHUB_PLUGIN_TOKEN: ${{ secrets.GH_PLUGIN_TOKEN }}
          GITHUB_MODULE_USER: ${{ secrets.GH_MODULE_USER }}
          GITHUB_MODULE_TOKEN: ${{ secrets.GH_MODULE_TOKEN }}
